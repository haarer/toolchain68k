name: Examples

on: [push, pull_request]

jobs:
  buildlinux:
    strategy:
      fail-fast: false
      matrix:
        architecture: [avr, arm-none-eabi, m68k-elf]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"        
      - name: Install dependencies
        run: |
          sudo apt-get install wget bzip2 git make tar flex bison diffutils texinfo gcc g++ libstdc++-8-dev
        shell: bash
      - name: Build toolchain
        run: |
          bash buildtoolchain.sh linux  ${{ matrix.architecture }}
      - name: Build example with toolchain
        run: |
          bash runtests.sh  ${{ matrix.architecture }}
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          path: toolchain-${{ matrix.architecture }}-linux-gcc-10.2.0.tar.gz
          retention-days: 5    
  buildwindows:
    strategy:
      fail-fast: false
      matrix:
        architecture: [avr, arm-none-eabi, m68k-elf]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install prepare msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: git wget bzip2 tar flex bison unzip diffutils texinfo make gcc pkg-config binutils autoconf
          update: true
      - name: update msys
        run: |
          pacman -Quq | grep -v mingw-w64- | xargs pacman -S --needed --noconfirm --noprogressbar
          pacman -Quq | grep ${MINGW_PACKAGE_PREFIX} | xargs pacman -S --needed --noconfirm --noprogressbar
      - name: Build toolchain
        run: |
          bash buildtoolchain.sh windows  ${{ matrix.architecture }}
      - name: Build example with toolchain
        run: |
          bash runtests.sh  ${{ matrix.architecture }}
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          path: toolchain-${{ matrix.architecture }}-windows-gcc-10.2.0.tar.gz
          retention-days: 5
